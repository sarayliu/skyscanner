{"version":3,"sources":["components/Header.js","components/Footer.js","components/Quotes.js","components/Places.js","components/AirportInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Footer","title2","title3","Quotes","findCarrierName","e","i","carrierPlanes","length","CarrierId","Name","console","log","quotes","map","quote","id","QuoteId","onClick","MinPrice","OutboundLeg","CarrierIds","DepartureDate","InboundLeg","Direct","QuoteDateTime","Styles","styled","div","Table","columns","data","useTable","autoResetSelectedRows","useBlockLayout","useRowSelect","getTableProps","getTableBodyProps","headerGroups","rows","toggleAllRowsSelected","prepareRow","state","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","toggleRowSelected","localStorage","setItem","original","PlaceId","style","backgroundColor","isSelected","cells","cell","getCellProps","Places","React","useMemo","accessor","places","AirportInfo","useState","places1","setPlaces1","query1","setQuery1","places2","setPlaces2","query2","setQuery2","setQuotes","carriers","setCarriers","outboundpartialdate","setOutboundpartialdate","inboundpartialdate","setInboundpartialdate","currency","setCurrency","showPlaces","setShowPlaces","showQuotes","setShowQuotes","destinationMessage","setDestinationMessage","onSubmit","a","reqOptions","method","process","fetch","URLSearchParams","query","response1","json","response2","preventDefault","fetchMyAPI","htmlFor","value","onChange","target","placeholder","required","getItem","passedJson","window","originplaceStr","ReactDOM","document","getElementById","passedJson2","destinationplaceStr","response","Carriers","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.1f536a50.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header(props) { \r\n    return(\r\n        <div className=\"header\">\r\n            {props.title}\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer(props) { \r\n    return(\r\n        <div className=\"footer\">\r\n            {props.title}\r\n            <br />\r\n            <div className=\"subtitle\">\r\n            \t{props.title2}\r\n            \t<br />\r\n            \t{props.title3}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport './Quotes.css';\r\n\r\nfunction Quotes(props) { \r\n\r\n    console.log(props)\r\n\r\n    function findCarrierName(e) {\r\n        var i;\r\n        for(i = 0; i < props.carrierPlanes.length; i++) {\r\n            if(props.carrierPlanes[i].CarrierId == e) {\r\n                return props.carrierPlanes[i].Name;\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"quotes\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Quote ID</th>\r\n                        <th>Price</th>\r\n                        <th>Outbound Carrier ID</th>\r\n                        <th>Outbound Carrier Name</th>\r\n                        <th>Outbound Leg Departure Date</th>\r\n                        <th>Inbound Carrier ID</th>\r\n                        <th>Inbound Carrier Name</th>\r\n                        <th>Inbound Leg Departure Date</th>\r\n                        <th>Direct Flight?</th>\r\n                        <th>Quote Date and Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {props.quotes.map(quote => {\r\n                        return (<tr className=\"selected\" id={quote.QuoteId} onClick={() => console.log('Quote ID: ' + quote.QuoteId)}>\r\n                            <th>{quote.QuoteId}</th>\r\n                            <th>{quote.MinPrice}</th>\r\n                            <th>{quote.OutboundLeg.CarrierIds}</th>\r\n                            <th>{findCarrierName(quote.OutboundLeg.CarrierIds)}</th>\r\n                            <th>{quote.OutboundLeg.DepartureDate}</th>\r\n                            <th>{quote.InboundLeg.CarrierIds}</th>\r\n                            <th>{findCarrierName(quote.InboundLeg.CarrierIds)}</th>\r\n                            <th>{quote.InboundLeg.DepartureDate}</th>\r\n                            <th>{\"\" + quote.Direct}</th>\r\n                            <th>{quote.QuoteDateTime}</th>\r\n                        </tr>)\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n         </div>\r\n    )\r\n}\r\n\r\nexport default Quotes;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, useBlockLayout, useRowSelect } from 'react-table'\r\n\r\nconst Styles = styled.div`\r\n  padding: 1rem;\r\n\r\n  .table {\r\n    display: inline-block;\r\n    border-spacing: 0;\r\n    border: 1px solid black;\r\n\r\n    .tr {\r\n      :last-child {\r\n        .td {\r\n          border-bottom: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    .th,\r\n    .td {\r\n      margin: 0;\r\n      padding: 0.5rem;\r\n      border-bottom: 1px solid black;\r\n      border-right: 1px solid black;\r\n      font-weight: bold;\r\n\r\n      :last-child {\r\n        border-right: 0;\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nfunction Table({ columns, data }) {\r\n  // Use the state and functions returned from useTable to build UI\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    rows,\r\n    toggleAllRowsSelected,\r\n    prepareRow,\r\n    state,\r\n  } = useTable(\r\n    {\r\n      autoResetSelectedRows: false,\r\n      columns,\r\n      data,\r\n    },\r\n    useBlockLayout,\r\n    useRowSelect\r\n  )\r\n\r\n  // Render the UI for table\r\n  return (\r\n    <>\r\n      <div {...getTableProps()} className=\"table\">\r\n        <div className=\"thead\">\r\n          {headerGroups.map(headerGroup => (\r\n            <div {...headerGroup.getHeaderGroupProps()} className=\"tr\">\r\n              {headerGroup.headers.map(column => (\r\n                <div {...column.getHeaderProps()} className=\"th\">\r\n                  {column.render('Header')}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <div\r\n                {...row.getRowProps({\r\n                  onClick: e => {\r\n                    toggleAllRowsSelected(false)\r\n                    row.toggleRowSelected()\r\n                    console.log('row: ' + row)\r\n                    console.log(row)\r\n                    console.log('state: ' + state)\r\n                  {/*this.props.selectedRow(row)*/}\r\n                    localStorage.setItem(\"myJson\", row.original.PlaceId);\r\n                  },\r\n                  style: {\r\n                    backgroundColor: row.isSelected ? 'green' : '',\r\n                  },\r\n                })}\r\n                className=\"tr\"\r\n              >\r\n                {row.cells.map(cell => {\r\n                  return (\r\n                    <div {...cell.getCellProps()} className=\"td\">\r\n                      {cell.render('Cell')}\r\n                    </div>\r\n                  )\r\n                })}\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n      {/*\r\n      <pre>\r\n        <code>\r\n          {JSON.stringify(state, null, 2)}</code>\r\n      </pre>\r\n    */}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Places(props) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n      {\r\n        Header: 'Airport ID',\r\n        accessor: 'PlaceId',\r\n      },\r\n      {\r\n        Header: 'Airport Name',\r\n        accessor: 'PlaceName',\r\n      },\r\n      {\r\n        Header: 'Country ID',\r\n        accessor: 'CountryId',\r\n      },\r\n      {\r\n        Header: 'Region ID',\r\n        accessor: 'RegionId',\r\n      },\r\n      {\r\n        Header: 'City ID',\r\n        accessor: 'CityId',\r\n      },\r\n      {\r\n        Header: 'Country Name',\r\n        accessor: 'CountryName',\r\n      },\r\n    ],\r\n    []\r\n  )\r\n\r\n  //console.log('props: ' + props)\r\n  console.log('props.places: ', props.places)\r\n\r\n  const data = props.places\r\n  //console.log('data: ' + data)\r\n\r\n  return (\r\n    <Styles>\r\n      <Table columns={columns} data={data} />\r\n    </Styles>\r\n  )\r\n}\r\n\r\nexport default Places","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './AirportInfo.css';\r\nimport Quotes from './Quotes';\r\nimport Places from './Places';\r\n\r\nfunction AirportInfo() { \r\n    var [places1,setPlaces1] = useState([])\r\n    const [query1,setQuery1] = useState(\"\")\r\n    const [places2,setPlaces2] = useState([])\r\n    const [query2,setQuery2] = useState(\"\")\r\n    const [quotes,setQuotes] = useState([])\r\n    const [carriers, setCarriers] = useState([])\r\n    //const [quotes2,setQuotes2] = useState([])\r\n    //const [originplace,setOriginplace] = useState(\"\")\r\n    //const [destinationplace,setDestinationplace] = useState(\"\")\r\n    const [outboundpartialdate,setOutboundpartialdate] = useState(\"\")\r\n    const [inboundpartialdate,setInboundpartialdate] = useState(\"\")\r\n    const [currency, setCurrency] = useState(\"\")\r\n    const [showPlaces,setShowPlaces] = useState(false)\r\n    const [showQuotes,setShowQuotes] = useState(false)\r\n\r\n    //const [originMessage, setOriginMessage] = useState(false)\r\n    const [destinationMessage, setDestinationMessage] = useState(false)\r\n\r\n    var originplaceStr = \"\";\r\n    var destinationplaceStr = \"\";\r\n\r\n    //const originText = React.createRef();\r\n\r\n    function handlePlacesSubmit(e) {\r\n        e.preventDefault()\r\n        async function fetchMyAPI() {\r\n            const reqOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`, //need to remove <> and add \"\" around the key in env\r\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\r\n                    \"useQueryString\": true\r\n                }\r\n            }\r\n            let response1 = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query1}), reqOptions)\r\n            response1 = await response1.json()\r\n            //console.log(response1)\r\n            setPlaces1(response1.Places)\r\n            //console.log(response1.Places)\r\n\r\n            let response2 = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?\" + new URLSearchParams({query: query2}), reqOptions)\r\n            response2 = await response2.json()\r\n            setPlaces2(response2.Places)\r\n            //console.log(response2.Places)\r\n        }\r\n        fetchMyAPI()\r\n        setShowPlaces(true)\r\n    }\r\n\r\n    function handleOriginSubmit(e) { //need to capitalize function to make it a React component and be able to use useEffect\r\n        e.preventDefault()\r\n        if (localStorage.getItem(\"myJson\") !== null) {\r\n              var passedJson = localStorage.getItem(\"myJson\") //get saved data anytime\r\n              console.log('Origin Airport: ' + passedJson)\r\n              console.log(passedJson)\r\n              // setOriginplace(passedJson) //doesn't update immediately since it goes into a queue\r\n              // console.log(\"originplace set to: \" + originplace)\r\n              // console.log(originplace)\r\n\r\n              // useEffect(() => {setOriginplace(passedJson)}, []) //can't actually use in a conditional or in a nested function\r\n\r\n              // setOriginplace(prevState => ({ //didn't update\r\n              //    ...prevState,\r\n              //    originplace: passedJson, // overwrite the value of the field to update\r\n              // }));\r\n              // console.log(\"originplace set to: \" + originplace)\r\n\r\n              // async function updateOriginplace() { //always one behind\r\n              //    let response3 = await setOriginplace(passedJson)\r\n              // }\r\n              // updateOriginplace()\r\n              // console.log(\"originplace set to: \" + originplace)\r\n\r\n              window.originplaceStr = passedJson;\r\n              console.log(\"originplaceStr set to: \" + window.originplaceStr)\r\n              //setOriginMessage(true)\r\n              ReactDOM.render(<h4>Origin airport {window.originplaceStr} selected!</h4>, document.getElementById('originID'))\r\n              {/*originText.current.focus();*/}\r\n         }\r\n         else {\r\n             console.log('Nothing stored')\r\n        }\r\n    }\r\n\r\n    function handleQuotesSubmit(e) {\r\n        e.preventDefault()\r\n        console.log(\"originplaceStr set to: \" + originplaceStr)\r\n        async function fetchMyAPI() {\r\n            const reqOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`, //need to remove <> and add \"\" around the key in env\r\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\r\n                    \"useQueryString\": true\r\n                }\r\n            }\r\n\r\n            if (localStorage.getItem(\"myJson\") !== null) {\r\n                 var passedJson2 = localStorage.getItem(\"myJson\") //get saved data anytime\r\n                 console.log('Destination Airport: ' + passedJson2)\r\n                 // setDestinationplace(passedJson2) //doesn't update immediately since it goes into a queue\r\n                 // console.log(\"destinationplace set to: \" + destinationplace)\r\n                 // setDestinationMessage(true)\r\n\r\n                // setDestinationplace(prevState => ({ //didn't update\r\n                //     destinationplace: passedJson2, // overwrite the value of the field to update\r\n                // }));\r\n                // console.log(\"destinationplace set to: \" + destinationplace)\r\n\r\n                window.destinationplaceStr = passedJson2;\r\n                console.log(\"destinationplaceStr set to: \" + window.destinationplaceStr)\r\n                setDestinationMessage(true)\r\n            }\r\n            else {\r\n                console.log('Nothing stored')\r\n            }\r\n\r\n            //React.findDOMNode(this.refs.form).reset();\r\n            // console.log(process.env.REACT_APP_API_KEY)\r\n            // console.log(`${process.env.REACT_APP_API_KEY}`)\r\n            // const qString = {\r\n            //     \"originplace\": originplace,\r\n            //     \"destinationplace\": destinationplace,\r\n            //     \"outboundpartialdate\": outboundpartialdate,\r\n            //     \"inboundpartialdate\": inboundpartialdate\r\n            // }\r\n            // let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US?\" + new URLSearchParams(qString), reqOptions) //doesn't work\r\n            \r\n            // console.log(originplace)\r\n            // console.log(destinationplace)\r\n\r\n            console.log(originplaceStr)\r\n            console.log(destinationplaceStr)\r\n\r\n            // let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/\" + originplace + \"/\" + destinationplace + \"/\" + \r\n                // outboundpartialdate + \"/\" + inboundpartialdate, reqOptions)\r\n\r\n            let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/\" + currency + \"/en-US/\" + window.originplaceStr + \"/\" + window.destinationplaceStr + \"/\" + \r\n                outboundpartialdate + \"/\" + inboundpartialdate, reqOptions)\r\n            // let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/USD/en-US/SFO-sky/JFK-sky/2019-01-01?inboundpartialdate=2019-09-01\",\r\n            //     reqOptions) //doesn't work\r\n            // let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsedates/v1.0/US/USD/en-US/AMS-sky/LAX-sky/2021-03/2021-04\", reqOptions) //works\r\n            // let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/USD/en-US/?\" + new URLSearchParams({originplace: originplace})\r\n            //     + \"/\" + new URLSearchParams({destinationplace: destinationplace}), reqOptions) //doesn't work\r\n            // let response = await fetch(\"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/USD/en-US/?\" +  originplace + \"/\" + destinationplace, \r\n            //     reqOptions) //doesn't work\r\n            console.log('response: ', response)\r\n            response = await response.json()\r\n            console.log('response json: ', response)\r\n            //setQuotes(response.Quotes)\r\n            setQuotes(response.Quotes)\r\n            console.log('quotes: ', quotes)\r\n            //console.log(quotes.Quotes)\r\n            console.log('quotes set to response')\r\n            setCarriers(response.Carriers)\r\n            //setQuotes2(response.Quotes)\r\n            //console.log('response.Quotes: ', response.Quotes)\r\n        }\r\n        fetchMyAPI()\r\n        setShowQuotes(true)\r\n\r\n        {/*\r\n        setOriginplace(\"\")\r\n        setDestinationplace(\"\")\r\n        setOutboundpartialdate(\"\")\r\n        setInboundpartialdate(\"\")\r\n        */}\r\n    }\r\n\r\n    {/*\r\n    function callbackFunction(childData) {\r\n      this.setState({message: childData})\r\n    }\r\n\r\n    places1 = (value) => {\r\n        console.log('In Parent component');\r\n        console.log(value);\r\n        // this.setState({selectedRow:value});\r\n        // this.setState({childObj:value});\r\n    }\r\n\r\n    */}\r\n\r\n    return(\r\n        <div className=\"airportinfo\">\r\n           <form onSubmit={handlePlacesSubmit}> {/*handleQuotesSubmit}>*/}\r\n                <label htmlFor=\"queryInput\">Origin State:</label>\r\n                <input id=\"queryInput\" value={query1} onChange={e => setQuery1(e.target.value)} placeholder=\"California\" required/>\r\n                <label htmlFor=\"queryInput\">Destination State:</label>\r\n                <input id=\"queryInput\" value={query2} onChange={e => setQuery2(e.target.value)} placeholder=\"New York\" required/>\r\n\r\n                {/*<label htmlFor=\"queryInput\">From:</label>\r\n                <input id=\"queryInput\" value={originplace} onChange={e => setOriginplace(e.target.value)} placeholder=\"AMS-sky\" required/>\r\n                <label htmlFor=\"queryInput\">To:</label>\r\n                <input id=\"queryInput\" value={destinationplace} onChange={e => setDestinationplace(e.target.value)} placeholder=\"LAX-sky\" required/>\r\n                <br />*/}\r\n\r\n                <label htmlFor=\"queryInput\">Depart:</label>\r\n                <input id=\"queryInput\" value={outboundpartialdate} onChange={e => setOutboundpartialdate(e.target.value)} placeholder = \"2021-03\" required/>\r\n                <label htmlFor=\"queryInput\">Return (round trip):</label>\r\n                <input id=\"queryInput\" value={inboundpartialdate} onChange={e => setInboundpartialdate(e.target.value)} placeholder = \"2021-04\" required/>\r\n\r\n                <label htmlFor=\"queryInput\">Currency:</label>\r\n                <input id=\"queryInput\" value={currency} onChange={e => setCurrency(e.target.value)} placeholder = \"USD\" required/>\r\n\r\n                {/* <label htmlFor=\"queryInput\">State or Country:</label> //need to comment with braces */}\r\n                {/* <input id=\"queryInput\" value={query} onChange={e => setQuery(e.target.value)} required/> */}\r\n                <button className=\"search\">Submit Preliminary Information</button>\r\n           </form>\r\n           { showPlaces ? \r\n                <div>\r\n                    <h2>Choose an origin airport in the table below by clicking a row. Scroll down to submit.</h2>\r\n                        <Places places={places1}></Places> \r\n                        <button className=\"search\" onClick={handleOriginSubmit}>Submit Origin Airport</button>\r\n                        <div id='originID'></div>\r\n                        {/*{originMessage ? <h4 ref={originText}>Origin airport {window.originplaceStr} selected!</h4> : <></>}*/}\r\n                    <h2>Choose a destination airport:</h2>\r\n                        <Places places={places2}></Places>\r\n                        <button className=\"search\" onClick={handleQuotesSubmit}>Submit Destination Airport and See Flight Options</button>\r\n                        {destinationMessage ? <h4>Destination airport {window.destinationplaceStr} selected!</h4> : <></>}\r\n                        {showQuotes ? <Quotes quotes={quotes} carrierPlanes={carriers}></Quotes> : <></>}\r\n                        \r\n                </div> : <></>\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default AirportInfo;\r\n\r\n{/*     {showQuotes ?\r\n           //  <div>\r\n           //      <Quotes quotes={quotes}></Quotes>\r\n           //      <Quotes quotes={quotes2}></Quotes>\r\n           //      <Places></Places>\r\n           //  </div> : <></>} */\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport AirportInfo from './components/AirportInfo';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header title=\"Airport Info\"></Header>\r\n      <AirportInfo></AirportInfo>\r\n      {/*<Footer title=\"2021 Capital One Software Engineering Summit Challenge + \\n + Data Pulled from Skyscanner API + \\n + Sara Liu\">*/}\r\n      {/*<Footer title=\"2021 Capital One Software Engineering Summit Challenge <br /> Data Pulled from Skyscanner API <br /> Sara Liu\">*/}\r\n      {/*<Footer title=[\"2021 Capital One Software Engineering Summit Challenge\", <br />, \"Data Pulled from Skyscanner API\", <br />, \"Sara Liu\"]>*/}\r\n      {/*<Footer title=\"2021 Capital One Software Engineering Summit Challenge\\nData Pulled from Skyscanner API\\nSara Liu\">*/}\r\n      <Footer title=\"2021 Capital One Software Engineering Summit Challenge\" title2=\"Data Pulled from Skyscanner API\" title3=\"Sara Liu\">\r\n      \t{/*<div>\r\n      \t \t<h2>Data Pulled from Skyscanner API</h2>\r\n      \t \t<h2>Sara Liu</h2>\r\n      \t </div>*/}\r\n      </Footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}